using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FollowPathLoop : FollowBase
{
    private float speed = 0;
    private Vector2 inputVelocity;

    public float accelSpeed = 1;
    public float maxSpeed = 1;
    // will pause at end of path for at least PauseDuration
    public float PauseDuration = 2;
    // At end of path, head back the other way.
    // if false, will loop back to the beginning.

    public Transform[] Path;

    int direction = 1;
    
    int pathIdx = 0;
    private Vector2 facing;
    private bool moving = true;

    // Start is called before the first frame update
    void Start()
    {
	transform.position = Path[0].transform.position;

        Transform body = transform.GetChild(1);
	body.position = Path[0].transform.position;

        Transform child = transform.GetChild(0);
	child.position = transform.position;
    }

    void FixedUpdate()
    {
	    if (moving == false)
		    return;
	    speed = Mathf.Min(maxSpeed, speed + Time.deltaTime * accelSpeed);
	    Vector2 lastPoint = Path[pathIdx].transform.position;

	    transform.position = Vector2.MoveTowards(transform.position,
		    lastPoint, speed * Time.deltaTime);
	    Vector2 delta = transform.position - Path[pathIdx].transform.position;
	    if (delta.magnitude > 0)
	    {
		    facing = delta;
	    }
	    else if (delta.magnitude == 0)
	    {
	        if (pathIdx == Path.Length - 1)
	        {
		    pathIdx = -1;
	        }
	        pathIdx += direction;
		
		Vector2 curDirection = Path[pathIdx].transform.position;
		Vector2 rotate = facing - (curDirection - lastPoint);
		transform.right = rotate;
		transform.up = rotate;
	    }
    }
}
